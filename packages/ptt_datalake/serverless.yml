service:
  name: ptt-datalake

provider:
  name: aws
  profile: deptno
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'ap-northeast-2'}
  runtime: nodejs12.x
  memorySize: 128
  logRetentionInDays: 7
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchGetItem
        - dynamodb:BatchWriteItem
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:DescribeStream
        - dynamodb:ListStreams
      Resource: "arn:aws:dynamodb:ap-northeast-2:*:*"
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: "arn:aws:lambda:ap-northeast-2:*:*"
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - s3:GetBucketLocation
        - s3:ListBucket
        - s3:ListBucketMultipartUploads
        - s3:ListMultipartUploadParts
        - s3:AbortMultipartUpload
        - s3:CreateBucket
      Resource: "arn:aws:s3:::*"
  environment: ${file(./env.${self:provider.stage}.yml)}

package:
  indivisually: true

plugins:
  - serverless-jetpack
  - serverless-webpack

functions:
  cronGetPetitionsTop15:
    description: "국민청원, 청원인 순 상위 15 청원을 크롤링"
    handler: cron/petitions.handler
    environment:
      TZ: Asia/Seoul
    events:
      - schedule:
          name: ${opt:stage}-cron-ptt-top-15
          description: '국민 청원 데이터를 30분 마다 업데이트'
          rate: cron(0/30 * * * ? *)
  cronArchive:
    description: "국민청원, 만료되는 청원 아카이브"
    handler: cron/archive.handler
    environment:
      TZ: Asia/Seoul
    events:
      - schedule:
          name: ${opt:stage}-cron-ptt-archive
          description: '매일 청원 데이터를 파일로 아카이브'
          rate: cron(50 14 * * ? *)
